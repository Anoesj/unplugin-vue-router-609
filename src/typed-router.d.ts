/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/suppliers/': RouteRecordInfo<'/suppliers/', '/suppliers', Record<never, never>, Record<never, never>>,
    '/suppliers/[id]': RouteRecordInfo<'/suppliers/[id]', '/suppliers/:id', { id: ParamValue<true> }, { id: ParamValue<false> }, '/suppliers/[id]/' | '/suppliers/[id]/products/[[product]]+' | '/suppliers/[id]/results/[[version]]'>,
    '/suppliers/[id]/': RouteRecordInfo<'/suppliers/[id]/', '/suppliers/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/suppliers/[id]/products/[[product]]+': RouteRecordInfo<'/suppliers/[id]/products/[[product]]+', '/suppliers/:id/products/:product*', { id: ParamValue<true>, product?: ParamValueZeroOrMore<true> }, { id: ParamValue<false>, product?: ParamValueZeroOrMore<false> }>,
    '/suppliers/[id]/results/[[version]]': RouteRecordInfo<'/suppliers/[id]/results/[[version]]', '/suppliers/:id/results/:version?', { id: ParamValue<true>, version?: ParamValueZeroOrOne<true> }, { id: ParamValue<false>, version?: ParamValueZeroOrOne<false> }>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/suppliers/index.vue': {
      routes: '/suppliers/'
      views: never
    }
    'src/pages/suppliers/[id].vue': {
      routes: '/suppliers/[id]' | '/suppliers/[id]/' | '/suppliers/[id]/products/[[product]]+' | '/suppliers/[id]/results/[[version]]'
      views: 'default'
    }
    'src/pages/suppliers/[id]/index.vue': {
      routes: '/suppliers/[id]/'
      views: never
    }
    'src/pages/suppliers/[id]/products/[[product]]+.vue': {
      routes: '/suppliers/[id]/products/[[product]]+'
      views: never
    }
    'src/pages/suppliers/[id]/results/[[version]].vue': {
      routes: '/suppliers/[id]/results/[[version]]'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
